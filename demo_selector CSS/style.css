div p {  /*Bắt tất cả thẻ p là con của thẻ div không cần biết là con cấp mấy */
    color: brown;
}

li >span {     /*Chỉ bắt từng thằng là con trực tiếp */
    color:rgb(24, 228, 24);
}

div ~p {  /* Tất cả những  thê p nào đứng sau cùng cấp thẻ div  dù có cách qua thẻ nào  */
    color: blue;
}

span +span {  /* Bắt từng thẻ span mà có thằng span  đứng ngay trước liền kề cùng cấp nó */
    color: yellow;
} 

div +span {  /* Bắt từng thẻ span mà có thằng div  đứng ngay trước liền kề cùng cấp nó   */
    color: red;
}

h1 >h3 {
    color: rgb(24, 228, 24);
}

/* 
.class//	.intro	Chọn tất cả các phần tử có class =”intro”	
#id//	#firstname	Chọn tất cả các phần tử có id=”firstname”	

*	*	Chọn tất cả các phần tử	
element//	p	Chọn tất cả các phần tử  <p>	
element,element//	div, p	Chọn tất cả các phần tử <div>và phần tử <p>	
element element//	div p	 Chọn tất cả các phần tử <p> là con của phần tử <div> Không kể bao nhiêu cấp // Bắt tất cả thằng con k kể bao nhiêu cấp 	
element>element//	div > p	Chọn tất cả các phần tử <p> có phần tử cha là <div>	// Bắt từng thằng p là con trực tiếp của div
element1~element2//	p ~ ul	Chọn tất cả các phần tử <ul> được đặt trước bởi một phần tử  <p>  //Bắt tất cả thằng p nào cùng cấp và viết sau ul bất kể ngắt quãng 	
element+element	div// + p	Chọn tất cả các phần tử <p> được đặt phía sau phần tử  <div>   // Bắt từng thằng p có thằng div cùng cấp đứng ngay trước liền kề nó 	

[attribute]             	[target]	Chọn tất cả các phần tử có cùng thuộc tính
[attribute=value]	        [target=_blank]	Chọn tất cả các phần tử có thuộc tính bằng giá trị( target=”_blank”)	
[attribute~=value]      	[title~=flower]	Chọn tất cả các phần tử có tiêu đề của thuộc tính có chứa từ “flower”	
[attribute|=value]	        [lang|=en]	Chọn tất cả các phần tử có giá trị thuộc tính “lang” bắt đầu bằng “en”	
[attribute^=value]	        a[href^=”https”]	Chọn tất cả các phần tử  <a> có giá trị thuộc tính “href” bắt đầu bằng “https”	
[attribute$=value]      	a[href$=”.pdf”]	Chọn tất cả các phần tử <a> có giá trị thuộc tính “href” kết thúc bằng”.pdf”	
[attribute*=value]      	a[href*=”timoday”]	Chọn tất cả các phần tử <a> có giá trị thuộc tính “href” chứa chuỗi”timoday”
	
:active	    a:active	Chọn tất cả các liên kết được kích hoạt	

::after	    p::after	Chèn thêm nội dung ngay phía sau của các phần tử <p>	
::before	p::before	Chèn thêm nội dung ngay phía trước của các phần tử <p>	
:checked	input:checked	Chọn tất cả các phần tử <input> đang được chọn (selected)	
:disabled	input:disabled	Chọn tất cả các phần tử <input> đang được vô hiệu hoá (disabled)	

:empty  	p:empty	Chọn tất cả các phần tử  <p> không chứa phần tử con (bao gồm cả các nút văn bản)	
:enabled	input:enabled	Chọn tất cả các phần tử <input> đang được kích hoạt	
:first-child	p:first-child	Chọn các phần tử  <p> có phần tử đầu tiên của phần tử cha chứa nó	
::first-letter	p::first-letter	Chọn kí tự đầu tiên của phần tử  <p>	
::first-line	p::first-line	Chọn dòng đầu tiên của các phần tử <p>	
:first-of-type	p:first-of-type	Chọn tất cả các phần tử <p> có phần tử đầu tiên <p> là phần tử cha	

:focus      	input:focus	Chọn các phần tử <input> nhận focus	
:hover	        a:hover	Chọn các liên kết khi chuột di chuyển qua	
:in-range	    input:in-range	Chọn phần tử <input> có giá trị  trong phạm vi nhất định	
:invalid	    input:invalid	Chọn tất cả các phần tử <input> có giá trị không hợp lệ	
:lang(language)	p:lang(it)	Chọn tất cả các phần tử  <p> có giá trị thuộc tính “lang” bằng “it”	
:last-child	    p:last-child	Chọn tất cả các phần tử <p> là phần tử con cuối cùng của phần tử cha	
:last-of-type	p:last-of-type	Chọn tất cả các phần tử <p> là thuộc tính cuối cùng của phần tử cha	
:link	a:link	Chọn tất cả các liên kết khi chưa được click	
:not(selector)	:not(p)	Chọn tất cả các phần tử không phải là một phần tử <p>	
:nth-child(n)	p:nth-child(2)	Chọn tất cả các phần tử <p> là phần tử thứ hai của phần tử cha	
:nth-last-child(n)	    p:nth-last-child(2)	Chọn tất cả các phần tử <p> là phần tử con thứ hai của phần tử cha, tính từ phần tử con cuối cùng	
:nth-last-of-type(n)	p:nth-last-of-type(2)	Chọn tất cả các phần tử <p>là phần tử thuộc tính thứ hai của phần tử cha, tính từ phần tử thuộc tính con cuối cùng	
:nth-of-type(n)     	p:nth-of-type(2)	Chọn tất cả các phần tử <p> là phần tử thuộc tính con thứ hai của phần tử cha	
:only-of-type	        p:only-of-type	Chọn tất cả các phần tử <p> là thuộc tính duy nhất của phần tử cha	
:only-child	            p:only-child	Chọn tất cả các phần tử <p> là con duy nhất của phần tử cha	
:optional	    input:optional	Chọn tất cả các phần tử đầu vào không có thuộc tính “required”	
:out-of-range	input:out-of-range	Chọn tất cả các phần tử đầu vào có giá trị ngoài một phạm vi nhất định	
:read-only	    input:read-only	Chọn tất cả các phần tử đầu vào có thuộc tính xác định “readonly”	
:read-write	    input:read-write	Chọn tất cả các phần tử đầu vào có thuộc tính không xác định “readonly”	
:required	    input:required	Chọn tất cả các phần tử đầu vào có thuộc tính  “required” xác định	
:root	        :root	Chọn các phần tử gốc của văn bản	
::selection	    ::selection	Chọn các phần tử được người dùng lựa chọn	
:target     	#news:target	Chọn các phần tử đang hoạt động hiện tại (click trong các liên kết  anchor name)	
:valid	        input:valid	Chọn tất cả các phần tử đầu vào có một giá trị hợp lệ	
:visited	    a:visited	Chọn tất cả các liên kết được truy cập	
*/